#!/bin/bash

set -e

# App SSL certificates are generated by completing a HTTP-01 challenge using the NGINX front-end proxy
function generate_app_cert() {
    echo "===== Starting app certificate generation"

    # pull the latest image
    docker pull certbot/certbot:latest

    # generate the certificates
    docker run --rm -it -v "$(pwd)/http_chal:/acme-share" -v "$(pwd)/letsencrypt:/etc/letsencrypt" certbot/certbot:latest certonly \
        --server https://acme-v02.api.letsencrypt.org/directory \
        --agree-tos \
        --rsa-key-size 4096 \
        --webroot \
        -w "/acme-share" \
        -d "$1" \
        -v
    
    # copy the certs into the mounted dir for nginx
    fullchain_path=$(realpath letsencrypt/live/$1/fullchain.pem)
    privkey_path=$(realpath letsencrypt/live/$1/privkey.pem)

    cp -f $fullchain_path app_cert/fullchain.pem
    cp -f $privkey_path app_cert/privkey.pem

    echo "===== App certificates have been generated and saved"
}

# generate_callback_cert($domain)
# Callback SSL certificates are generated by completing a DNS-01 challenge via the Hotline DNS callback service
function generate_callback_cert() {
    echo "===== Starting callback certificate generation"

    # pull the latest image
    docker pull captaingeech/certbot-dns-hotline:latest

    # generate the certificates
    docker run --rm -it -v "$(pwd)/dns_chal:/acme-share" -v "$(pwd)/letsencrypt:/etc/letsencrypt" captaingeech/certbot-dns-hotline:latest certonly \
        --authenticator dns-hotline \
        --dns-hotline-path /acme-share \
        --server https://acme-v02.api.letsencrypt.org/directory \
        --agree-tos \
        --rsa-key-size 4096 \
        -d "$1" \
        -d "*.$1" \
        -v

    # copy the certs into the mounted dir for nginx
    fullchain_path=$(realpath letsencrypt/live/$1/fullchain.pem)
    privkey_path=$(realpath letsencrypt/live/$1/privkey.pem)

    cp -f $fullchain_path callback_cert/fullchain.pem
    cp -f $privkey_path callback_cert/privkey.pem

    echo "===== Callback certificates have been generated and saved"
}

function usage() {
    echo "usage: ./gen_certs.sh [ -a yourappdomainhere ] [ -c yourcallbackdomainhere ]" 2>&1
}

app_domain=""
callback_domain=""

# https://www.computerhope.com/unix/bash/getopts.htm
while getopts ":a:c:h" opts; do
    case "${opts}" in
        a)
            app_domain=${OPTARG}
            ;;
        c)
            callback_domain=${OPTARG}
            ;;
        h)
            usage
            exit 0
            ;;
        :)
            echo "error: value needed for -${OPTARG}"
            exit 2
            ;;
        *)
            usage
            exit 2
            ;;
    esac
done

if [ \( "$app_domain" == "" \) -a \( "$callback_domain" == "" \) ]; then
    usage
    echo "at least one of -a and -c must be specified" 2>&1
    exit 2
fi

# make sure docker is available
command -v docker >/dev/null
if [[ $? -ne 0 ]]; then
    echo 'failed to find docker in $PATH' 2>&1
    exit 1
fi

if [ "$app_domain" != "" ]; then
    generate_app_cert $app_domain
fi

if [ "$callback_domain" != "" ]; then
    generate_callback_cert $callback_domain
fi